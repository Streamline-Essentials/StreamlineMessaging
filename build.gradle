plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group properties['group']
version properties['version']

ext {
    deps = ""
    StringBuilder builder = new StringBuilder()

    int i = 0
    List<String> list = properties['pf.dependencies'].toString().split(", ")
    for (String s : list) {
        if (i == list.size() - 1) {
            builder.append(s)
        } else {
            builder.append(s).append(", ")
        }
        i ++
    }

    deps = builder.toString()

    needs_bapi = false

    String include_bapi = rootProject.properties.get('include-bapi', "false");

    if (include_bapi.toBoolean()) {
        needs_bapi = true
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/central/' }
    maven { url 'https://jitpack.io/' }
}

dependencies {
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // LuckPerms
    compileOnly 'net.luckperms:api:5.4'

    // CosmicCore
    compileOnly 'com.github.Streamline-Essentials.StreamlineCore:StreamlineCore-API:main-SNAPSHOT'
    annotationProcessor 'com.github.Streamline-Essentials.StreamlineCore:StreamlineCore-API:main-SNAPSHOT'

    if (rootProject.ext.needs_bapi) {
        compileOnly 'com.github.Streamline-Essentials.StreamlineCore:StreamlineCore-BAPI:main-SNAPSHOT'
        annotationProcessor 'com.github.Streamline-Essentials.StreamlineCore:StreamlineCore-BAPI:main-SNAPSHOT'
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

shadowJar {
    manifest {
        attributes 'Plugin-Class': rootProject.properties['pf.class'].toString() + '.' + rootProject.name.toString()
        attributes 'Plugin-Id': rootProject.properties['pf.id'].toString()
        attributes 'Plugin-Version': rootProject.version.toString()
        attributes 'Plugin-Requires': ( rootProject.properties['pf.requires'].toString() == 'none' ? '' : rootProject.properties['pf.requires'].toString() )
        attributes 'Plugin-Dependencies': ( rootProject.properties['pf.dependencies'].toString() == 'none' ? '' : rootProject.properties['pf.dependencies'].toString() )
        attributes 'Plugin-Description': rootProject.properties['pf.description'].toString()
        attributes 'Plugin-Provider': rootProject.properties['pf.provider'].toString()
        attributes 'Plugin-License': rootProject.properties['pf.license'].toString()
    }

    archiveFileName = project.name + '-' + project.version + '.jar'

    minimize()
}

artifacts {
    archives shadowJar
}

wrapper {
    gradleVersion = '8.9'
    distributionType = Wrapper.DistributionType.BIN
}